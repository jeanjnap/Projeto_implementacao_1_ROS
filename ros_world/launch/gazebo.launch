<launch>
  <!-- Arguments -->
  <arg name="model" default="burger"/>
  <!-- <arg name="x_pos" default="-2"/>
  <arg name="y_pos" default="0"/>
  <arg name="z_pos" default="0.1"/> -->

  <!-- <arg name="x_pos" default="-25.5"/>
  <arg name="y_pos" default="-11.99"/>
  <arg name="z_pos" default="0.1"/> -->

  <arg name="x" default="-2"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.1"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="scan_topic" default="/scan"/>
  <arg name="odom_topic" default="/odom" />
  <arg name="move_forward_only" default="false"/>
  <arg name="open_rviz" default="true"/>
  
  <!-- Map -->
  <arg name="map_file" default="$(find ros_world)/maps/PisoSuperior.yaml"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find ros_world)/worlds/dc.world"/> -->
    <!-- <arg name="world_name" value="$(find ros_world)/worlds/ros_world.world"/> -->
    <arg name="world_name" value="$(find ros_world)/worlds/dc_new.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- <param name="robot_description" command="$(find xacro)/xacro - -inorder $(find turtlebot3)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3)/urdf/mobile_rob_dev_sim.urdf use_nominal_extrinsics:=true add_plug:=true"/>
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-file $(find turtlebot3)/urdf/mobile_rob_dev_sim.urdf -urdf -model mobile_rob_dev_sim -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" output="screen"/>
	<node name="fake_joint_calibration" pkg="rostopic" type="rostopic" args="pub /calibrated std_msgs/Bool true"/>
  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- rviz -->
  <arg name="rvizconfig" default="$(find global_path_planning)/rviz/turtlebot3_ros_world.rviz"/>
  <node if="$(arg open_rviz)" name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(arg rvizconfig)"/>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="odom" />
  </node>

  <!-- Static tf between map and odom -->
  <arg name="static_tf" default="true" />
  <node if="$(arg static_tf)" pkg="tf2_ros" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom" />

  <!-- Planners -->
  <arg name="base_global_planner" default="srv_client_plugin/SrvClientPlugin"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find global_path_planning)/param/dc/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find global_path_planning)/param/dc/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find global_path_planning)/param/dc/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find global_path_planning)/param/dc/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find global_path_planning)/param/dc/move_base_params.yaml" command="load" />
    <rosparam file="$(find global_path_planning)/param/dc/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find global_path_planning)/param/dc/global_planner_params.yaml" command="load" />
    <rosparam file="$(find global_path_planning)/param/dc/navfn_global_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg scan_topic)"/>

    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>
  </node>
  <!-- Move base -->
  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find global_path_planning)/param/dc/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find global_path_planning)/param/dc/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find global_path_planning)/param/dc/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find global_path_planning)/param/dc/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find global_path_planning)/param/dc/base_local_planner_params.yaml" command="load"/>
    <rosparam file="$(find global_path_planning)/param/dc/navfn_global_planner_params.yaml" command="load" />
    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="odom"/>
    <remap from="scan" to="rslidar_points"/>
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>
  </node> -->
</launch>